(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     23103,        534]
NotebookOptionsPosition[     21863,        485]
NotebookOutlinePosition[     22233,        501]
CellTagsIndexPosition[     22190,        498]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.73082688792507*^9, 3.730826889725719*^9}}],

Cell[BoxData["\<\"/home/cmaier\"\>"], "Output",
 CellChangeTimes->{3.730826890457509*^9, 3.730834121496766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filename", "=", 
  "\"\</home/cmaier/Hackerspaces/calliope/calliope-project-template/helpers/\
clockdump.c\>\""}]], "Input",
 CellChangeTimes->{{3.730826900484536*^9, 3.7308269311594048`*^9}, {
  3.7308341353559732`*^9, 3.7308341844023952`*^9}}],

Cell[BoxData["\<\"/home/cmaier/Hackerspaces/calliope/calliope-project-\
template/helpers/clockdump.c\"\>"], "Output",
 CellChangeTimes->{
  3.730826931767207*^9, {3.7308341648371077`*^9, 3.730834184822485*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"feile", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"filename", ",", "\"\<Text\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730826937422875*^9, 3.7308269433685503`*^9}, {
  3.7308341946339483`*^9, 3.73083419770537*^9}}],

Cell[BoxData["\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTART, \
\\\"NRF_CLOCK->TASKS_HFCLKSTART\\\"); /*!< Start HFCLK clock source. \
*/\\nputreg(&NRF_CLOCK->TASKS_HFCLKSTOP, \\\"NRF_CLOCK->TASKS_HFCLKSTOP\\\"); \
/*!< Stop HFCLK clock source. */\\nputreg(&NRF_CLOCK->TASKS_LFCLKSTART, \
\\\"NRF_CLOCK->TASKS_LFCLKSTART\\\"); /*!< Start LFCLK clock source. \
*/\\nputreg(&NRF_CLOCK->TASKS_LFCLKSTOP, \\\"NRF_CLOCK->TASKS_LFCLKSTOP\\\"); \
/*!< Stop LFCLK clock source. */\\nputreg(&NRF_CLOCK->TASKS_CAL, \
\\\"NRF_CLOCK->TASKS_CAL\\\"); /*!< Start calibration of LFCLK RC oscillator. \
*/\\nputreg(&NRF_CLOCK->TASKS_CTSTART, \\\"NRF_CLOCK->TASKS_CTSTART\\\"); \
/*!< Start calibration timer. */\\nputreg(&NRF_CLOCK->TASKS_CTSTOP, \
\\\"NRF_CLOCK->TASKS_CTSTOP\\\"); /*!< Stop calibration timer. \
*/\\nputreg(&NRF_CLOCK->EVENTS_HFCLKSTARTED, \
\\\"NRF_CLOCK->EVENTS_HFCLKSTARTED\\\"); /*!< HFCLK oscillator started. \
*/\\nputreg(&NRF_CLOCK->EVENTS_LFCLKSTARTED, \
\\\"NRF_CLOCK->EVENTS_LFCLKSTARTED\\\"); /*!< LFCLK oscillator started. \
*/\\nputreg(&NRF_CLOCK->EVENTS_DONE, \\\"NRF_CLOCK->EVENTS_DONE\\\"); /*!< \
Calibration of LFCLK RC oscillator completed. \
*/\\nputreg(&NRF_CLOCK->EVENTS_CTTO, \\\"NRF_CLOCK->EVENTS_CTTO\\\"); /*!< \
Calibration timer timeout. */\\nputreg(&NRF_CLOCK->INTENSET, \
\\\"NRF_CLOCK->INTENSET\\\"); /*!< Interrupt enable set register. \
*/\\nputreg(&NRF_CLOCK->INTENCLR, \\\"NRF_CLOCK->INTENCLR\\\"); /*!< \
Interrupt enable clear register. */\\nputreg(&NRF_CLOCK->HFCLKRUN, \
\\\"NRF_CLOCK->HFCLKRUN\\\"); /*!< Task HFCLKSTART trigger status. \
*/\\nputreg(&NRF_CLOCK->HFCLKSTAT, \\\"NRF_CLOCK->HFCLKSTAT\\\"); /*!< High \
frequency clock status. */\\nputreg(&NRF_CLOCK->LFCLKRUN, \
\\\"NRF_CLOCK->LFCLKRUN\\\"); /*!< Task LFCLKSTART triggered status. \
*/\\nputreg(&NRF_CLOCK->LFCLKSTAT, \\\"NRF_CLOCK->LFCLKSTAT\\\"); /*!< Low \
frequency clock status. */\\nputreg(&NRF_CLOCK->LFCLKSRCCOPY, \
\\\"NRF_CLOCK->LFCLKSRCCOPY\\\"); /*!< Clock source for the LFCLK clock, set \
when task LKCLKSTART is triggered. */\\nputreg(&NRF_CLOCK->LFCLKSRC, \
\\\"NRF_CLOCK->LFCLKSRC\\\"); /*!< Clock source for the LFCLK clock. \
*/\\nputreg(&NRF_CLOCK->CTIV, \\\"NRF_CLOCK->CTIV\\\"); /*!< Calibration \
timer interval. */\\nputreg(&NRF_CLOCK->XTALFREQ, \
\\\"NRF_CLOCK->XTALFREQ\\\"); /*!< Crystal frequency. */\\n\"\>"], "Output",
 CellChangeTimes->{
  3.73082694425132*^9, {3.730834170317203*^9, 3.730834198412446*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zeilen", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{"feile", ",", "\"\<\\n\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730827189511656*^9, 3.7308272261296864`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTART, \
\\\"NRF_CLOCK->TASKS_HFCLKSTART\\\"); /*!< Start HFCLK clock source. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTOP, \
\\\"NRF_CLOCK->TASKS_HFCLKSTOP\\\"); /*!< Stop HFCLK clock source. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->TASKS_LFCLKSTART, \
\\\"NRF_CLOCK->TASKS_LFCLKSTART\\\"); /*!< Start LFCLK clock source. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->TASKS_LFCLKSTOP, \
\\\"NRF_CLOCK->TASKS_LFCLKSTOP\\\"); /*!< Stop LFCLK clock source. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->TASKS_CAL, \\\"NRF_CLOCK->TASKS_CAL\\\"); \
/*!< Start calibration of LFCLK RC oscillator. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->TASKS_CTSTART, \\\"NRF_CLOCK->TASKS_CTSTART\\\
\"); /*!< Start calibration timer. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->TASKS_CTSTOP, \
\\\"NRF_CLOCK->TASKS_CTSTOP\\\"); /*!< Stop calibration timer. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->EVENTS_HFCLKSTARTED, \
\\\"NRF_CLOCK->EVENTS_HFCLKSTARTED\\\"); /*!< HFCLK oscillator started. \
*/\"\>", ",", "\<\"putreg(&NRF_CLOCK->EVENTS_LFCLKSTARTED, \
\\\"NRF_CLOCK->EVENTS_LFCLKSTARTED\\\"); /*!< LFCLK oscillator started. \
*/\"\>", ",", "\<\"putreg(&NRF_CLOCK->EVENTS_DONE, \\\"NRF_CLOCK->EVENTS_DONE\
\\\"); /*!< Calibration of LFCLK RC oscillator completed. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->EVENTS_CTTO, \\\"NRF_CLOCK->EVENTS_CTTO\\\"); \
/*!< Calibration timer timeout. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->INTENSET, \\\"NRF_CLOCK->INTENSET\\\"); /*!< \
Interrupt enable set register. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->INTENCLR, \\\"NRF_CLOCK->INTENCLR\\\"); /*!< \
Interrupt enable clear register. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->HFCLKRUN, \\\"NRF_CLOCK->HFCLKRUN\\\"); /*!< \
Task HFCLKSTART trigger status. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->HFCLKSTAT, \\\"NRF_CLOCK->HFCLKSTAT\\\"); \
/*!< High frequency clock status. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->LFCLKRUN, \\\"NRF_CLOCK->LFCLKRUN\\\"); /*!< \
Task LFCLKSTART triggered status. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->LFCLKSTAT, \\\"NRF_CLOCK->LFCLKSTAT\\\"); \
/*!< Low frequency clock status. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->LFCLKSRCCOPY, \
\\\"NRF_CLOCK->LFCLKSRCCOPY\\\"); /*!< Clock source for the LFCLK clock, set \
when task LKCLKSTART is triggered. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->LFCLKSRC, \\\"NRF_CLOCK->LFCLKSRC\\\"); /*!< \
Clock source for the LFCLK clock. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->CTIV, \\\"NRF_CLOCK->CTIV\\\"); /*!< \
Calibration timer interval. */\"\>", 
   ",", "\<\"putreg(&NRF_CLOCK->XTALFREQ, \\\"NRF_CLOCK->XTALFREQ\\\"); /*!< \
Crystal frequency. */\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.730827197454495*^9, 3.730827227110647*^9}, 
   3.7308342151276217`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"splits", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"StringSplit", "[", 
     RowBox[{"#", ",", "\"\<\\\"\>\""}], "]"}], "&"}], "/@", 
   "zeilen"}]}]], "Input",
 CellChangeTimes->{{3.7308272468978453`*^9, 3.730827258278123*^9}, {
  3.730827348690346*^9, 3.730827349723798*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTART, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_HFCLKSTART\"\>", 
     ",", "\<\"); /*!< Start HFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTOP, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_HFCLKSTOP\"\>", 
     ",", "\<\"); /*!< Stop HFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_LFCLKSTART, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_LFCLKSTART\"\>", 
     ",", "\<\"); /*!< Start LFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_LFCLKSTOP, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_LFCLKSTOP\"\>", 
     ",", "\<\"); /*!< Stop LFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_CAL, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_CAL\"\>", 
     ",", "\<\"); /*!< Start calibration of LFCLK RC oscillator. */\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_CTSTART, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_CTSTART\"\>", 
     ",", "\<\"); /*!< Start calibration timer. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_CTSTOP, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_CTSTOP\"\>", 
     ",", "\<\"); /*!< Stop calibration timer. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_HFCLKSTARTED, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_HFCLKSTARTED\"\>", 
     ",", "\<\"); /*!< HFCLK oscillator started. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_LFCLKSTARTED, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_LFCLKSTARTED\"\>", 
     ",", "\<\"); /*!< LFCLK oscillator started. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_DONE, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_DONE\"\>", 
     ",", "\<\"); /*!< Calibration of LFCLK RC oscillator completed. \
*/\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_CTTO, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_CTTO\"\>", 
     ",", "\<\"); /*!< Calibration timer timeout. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->INTENSET, \"\>", 
     ",", "\<\"NRF_CLOCK->INTENSET\"\>", 
     ",", "\<\"); /*!< Interrupt enable set register. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->INTENCLR, \"\>", 
     ",", "\<\"NRF_CLOCK->INTENCLR\"\>", 
     ",", "\<\"); /*!< Interrupt enable clear register. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->HFCLKRUN, \"\>", 
     ",", "\<\"NRF_CLOCK->HFCLKRUN\"\>", 
     ",", "\<\"); /*!< Task HFCLKSTART trigger status. */\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->HFCLKSTAT, \"\>", 
     ",", "\<\"NRF_CLOCK->HFCLKSTAT\"\>", 
     ",", "\<\"); /*!< High frequency clock status. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKRUN, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKRUN\"\>", 
     ",", "\<\"); /*!< Task LFCLKSTART triggered status. */\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKSTAT, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKSTAT\"\>", 
     ",", "\<\"); /*!< Low frequency clock status. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKSRCCOPY, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKSRCCOPY\"\>", 
     ",", "\<\"); /*!< Clock source for the LFCLK clock, set when task \
LKCLKSTART is triggered. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKSRC, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKSRC\"\>", 
     ",", "\<\"); /*!< Clock source for the LFCLK clock. */\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->CTIV, \"\>", 
     ",", "\<\"NRF_CLOCK->CTIV\"\>", 
     ",", "\<\"); /*!< Calibration timer interval. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->XTALFREQ, \"\>", 
     ",", "\<\"NRF_CLOCK->XTALFREQ\"\>", 
     ",", "\<\"); /*!< Crystal frequency. */\"\>"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.730827259026276*^9, 3.730827350268827*^9, 
  3.73083422084837*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "splits"}]], "Input",
 CellChangeTimes->{{3.730827356887719*^9, 3.7308273593003483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7308273596516733`*^9, 3.730834226825205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"padded", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "3"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"StringPadRight", "[", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           ",", "32"}], "]"}], ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        "}"}], ",", "#"}], "]"}], "&"}], "/@", "splits"}]}]], "Input",
 CellChangeTimes->{{3.7308274658711576`*^9, 3.7308274914655657`*^9}, {
  3.73082757455049*^9, 3.730827589848681*^9}, {3.730827657339322*^9, 
  3.73082770687661*^9}, {3.730827753053008*^9, 3.730827786595808*^9}, {
  3.7308342530624332`*^9, 3.7308342545498962`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTART, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_HFCLKSTART     \"\>", 
     ",", "\<\"); /*!< Start HFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTOP, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_HFCLKSTOP      \"\>", 
     ",", "\<\"); /*!< Stop HFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_LFCLKSTART, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_LFCLKSTART     \"\>", 
     ",", "\<\"); /*!< Start LFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_LFCLKSTOP, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_LFCLKSTOP      \"\>", 
     ",", "\<\"); /*!< Stop LFCLK clock source. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_CAL, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_CAL            \"\>", 
     ",", "\<\"); /*!< Start calibration of LFCLK RC oscillator. */\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_CTSTART, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_CTSTART        \"\>", 
     ",", "\<\"); /*!< Start calibration timer. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->TASKS_CTSTOP, \"\>", 
     ",", "\<\"NRF_CLOCK->TASKS_CTSTOP         \"\>", 
     ",", "\<\"); /*!< Stop calibration timer. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_HFCLKSTARTED, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_HFCLKSTARTED  \"\>", 
     ",", "\<\"); /*!< HFCLK oscillator started. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_LFCLKSTARTED, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_LFCLKSTARTED  \"\>", 
     ",", "\<\"); /*!< LFCLK oscillator started. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_DONE, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_DONE          \"\>", 
     ",", "\<\"); /*!< Calibration of LFCLK RC oscillator completed. \
*/\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->EVENTS_CTTO, \"\>", 
     ",", "\<\"NRF_CLOCK->EVENTS_CTTO          \"\>", 
     ",", "\<\"); /*!< Calibration timer timeout. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->INTENSET, \"\>", 
     ",", "\<\"NRF_CLOCK->INTENSET             \"\>", 
     ",", "\<\"); /*!< Interrupt enable set register. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->INTENCLR, \"\>", 
     ",", "\<\"NRF_CLOCK->INTENCLR             \"\>", 
     ",", "\<\"); /*!< Interrupt enable clear register. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->HFCLKRUN, \"\>", 
     ",", "\<\"NRF_CLOCK->HFCLKRUN             \"\>", 
     ",", "\<\"); /*!< Task HFCLKSTART trigger status. */\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->HFCLKSTAT, \"\>", 
     ",", "\<\"NRF_CLOCK->HFCLKSTAT            \"\>", 
     ",", "\<\"); /*!< High frequency clock status. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKRUN, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKRUN             \"\>", 
     ",", "\<\"); /*!< Task LFCLKSTART triggered status. */\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKSTAT, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKSTAT            \"\>", 
     ",", "\<\"); /*!< Low frequency clock status. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKSRCCOPY, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKSRCCOPY         \"\>", 
     ",", "\<\"); /*!< Clock source for the LFCLK clock, set when task \
LKCLKSTART is triggered. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->LFCLKSRC, \"\>", 
     ",", "\<\"NRF_CLOCK->LFCLKSRC             \"\>", 
     ",", "\<\"); /*!< Clock source for the LFCLK clock. */\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->CTIV, \"\>", 
     ",", "\<\"NRF_CLOCK->CTIV                 \"\>", 
     ",", "\<\"); /*!< Calibration timer interval. */\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"putreg(&NRF_CLOCK->XTALFREQ, \"\>", 
     ",", "\<\"NRF_CLOCK->XTALFREQ             \"\>", 
     ",", "\<\"); /*!< Crystal frequency. */\"\>"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7308274921304617`*^9, 3.730827591169325*^9, 3.730827669090514*^9, {
   3.7308276997813063`*^9, 3.730827707588381*^9}, {3.730827760922183*^9, 
   3.7308277874038477`*^9}, {3.730834236047226*^9, 3.730834254997739*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outfile", "=", 
  RowBox[{"StringRiffle", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringRiffle", "[", 
       RowBox[{"#", ",", "\"\<\\\"\>\""}], "]"}], "&"}], "/@", "padded"}], 
    ",", "\"\<\\n\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7308278335860987`*^9, 3.7308279021924458`*^9}}],

Cell[BoxData["\<\"putreg(&NRF_CLOCK->TASKS_HFCLKSTART, \
\\\"NRF_CLOCK->TASKS_HFCLKSTART     \\\"); /*!< Start HFCLK clock source. \
*/\\nputreg(&NRF_CLOCK->TASKS_HFCLKSTOP, \\\"NRF_CLOCK->TASKS_HFCLKSTOP      \
\\\"); /*!< Stop HFCLK clock source. \
*/\\nputreg(&NRF_CLOCK->TASKS_LFCLKSTART, \\\"NRF_CLOCK->TASKS_LFCLKSTART     \
\\\"); /*!< Start LFCLK clock source. \
*/\\nputreg(&NRF_CLOCK->TASKS_LFCLKSTOP, \\\"NRF_CLOCK->TASKS_LFCLKSTOP      \
\\\"); /*!< Stop LFCLK clock source. */\\nputreg(&NRF_CLOCK->TASKS_CAL, \
\\\"NRF_CLOCK->TASKS_CAL            \\\"); /*!< Start calibration of LFCLK RC \
oscillator. */\\nputreg(&NRF_CLOCK->TASKS_CTSTART, \
\\\"NRF_CLOCK->TASKS_CTSTART        \\\"); /*!< Start calibration timer. \
*/\\nputreg(&NRF_CLOCK->TASKS_CTSTOP, \\\"NRF_CLOCK->TASKS_CTSTOP         \
\\\"); /*!< Stop calibration timer. \
*/\\nputreg(&NRF_CLOCK->EVENTS_HFCLKSTARTED, \
\\\"NRF_CLOCK->EVENTS_HFCLKSTARTED  \\\"); /*!< HFCLK oscillator started. \
*/\\nputreg(&NRF_CLOCK->EVENTS_LFCLKSTARTED, \
\\\"NRF_CLOCK->EVENTS_LFCLKSTARTED  \\\"); /*!< LFCLK oscillator started. \
*/\\nputreg(&NRF_CLOCK->EVENTS_DONE, \\\"NRF_CLOCK->EVENTS_DONE          \
\\\"); /*!< Calibration of LFCLK RC oscillator completed. \
*/\\nputreg(&NRF_CLOCK->EVENTS_CTTO, \\\"NRF_CLOCK->EVENTS_CTTO          \
\\\"); /*!< Calibration timer timeout. */\\nputreg(&NRF_CLOCK->INTENSET, \
\\\"NRF_CLOCK->INTENSET             \\\"); /*!< Interrupt enable set \
register. */\\nputreg(&NRF_CLOCK->INTENCLR, \\\"NRF_CLOCK->INTENCLR           \
  \\\"); /*!< Interrupt enable clear register. \
*/\\nputreg(&NRF_CLOCK->HFCLKRUN, \\\"NRF_CLOCK->HFCLKRUN             \\\"); \
/*!< Task HFCLKSTART trigger status. */\\nputreg(&NRF_CLOCK->HFCLKSTAT, \
\\\"NRF_CLOCK->HFCLKSTAT            \\\"); /*!< High frequency clock status. \
*/\\nputreg(&NRF_CLOCK->LFCLKRUN, \\\"NRF_CLOCK->LFCLKRUN             \\\"); \
/*!< Task LFCLKSTART triggered status. */\\nputreg(&NRF_CLOCK->LFCLKSTAT, \
\\\"NRF_CLOCK->LFCLKSTAT            \\\"); /*!< Low frequency clock status. \
*/\\nputreg(&NRF_CLOCK->LFCLKSRCCOPY, \\\"NRF_CLOCK->LFCLKSRCCOPY         \
\\\"); /*!< Clock source for the LFCLK clock, set when task LKCLKSTART is \
triggered. */\\nputreg(&NRF_CLOCK->LFCLKSRC, \\\"NRF_CLOCK->LFCLKSRC          \
   \\\"); /*!< Clock source for the LFCLK clock. \
*/\\nputreg(&NRF_CLOCK->CTIV, \\\"NRF_CLOCK->CTIV                 \\\"); /*!< \
Calibration timer interval. */\\nputreg(&NRF_CLOCK->XTALFREQ, \
\\\"NRF_CLOCK->XTALFREQ             \\\"); /*!< Crystal frequency. */\"\>"], \
"Output",
 CellChangeTimes->{3.730827856070505*^9, 3.7308279027196493`*^9, 
  3.730834271381651*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"filename", ",", "outfile", ",", "\"\<Text\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.730827924167194*^9, 3.730827967836999*^9}}],

Cell[BoxData["\<\"/home/cmaier/Hackerspaces/calliope/calliope-project-\
template/helpers/clockdump.c\"\>"], "Output",
 CellChangeTimes->{3.730827930631822*^9, 3.730827983764371*^9, 
  3.7308343723273163`*^9}]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 554}, {5, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 40, "Input"],
Cell[705, 26, 111, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853, 32, 269, 5, 97, "Input"],
Cell[1125, 39, 210, 3, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1372, 47, 246, 5, 40, "Input"],
Cell[1621, 54, 2439, 35, 1469, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4097, 94, 198, 4, 40, "Input"],
Cell[4298, 100, 2809, 46, 1525, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7144, 151, 300, 8, 40, "Input"],
Cell[7447, 161, 4323, 95, 1497, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11807, 261, 132, 2, 40, "Input"],
Cell[11942, 265, 833, 24, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12812, 294, 898, 21, 97, "Input"],
Cell[13713, 317, 4679, 97, 1805, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18429, 419, 337, 9, 69, "Input"],
Cell[18769, 430, 2648, 39, 1777, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21454, 474, 182, 3, 40, "Input"],
Cell[21639, 479, 208, 3, 126, "Output"]
}, Open  ]]
}
]
*)

